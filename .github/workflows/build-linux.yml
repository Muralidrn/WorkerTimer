name: Build Linux Package

# Trigger workflow on tag push or manual run
on:
  push:
    tags:
      - '*'  # Trigger on any new tag
  workflow_dispatch:  # Allows manual trigger from GitHub Actions

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Java 20
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      # Step 3: Build the JAR using Maven
      - name: Build JAR
        run: mvn clean package

      - name: List target folder
        run: ls -lh target/

      - name: Set JAR_NAME
        run: |
         echo "Available jars in target/:"
         ls target/*.jar || true
         echo "JAR_NAME=demo-1.0-SNAPSHOT.jar" >> $GITHUB_ENV



      # Step 4: Download JavaFX Linux SDK
      - name: Download JavaFX SDK
        run: |
         curl -L -o javafx-sdk.zip https://download2.gluonhq.com/openjfx/21/openjfx-21_linux-x64_bin-sdk.zip
         unzip javafx-sdk.zip





        # Step 5: Build runtime image with jlink
      # Step 5: Build runtime image with jlink
      - name: Build runtime image
        run: |
         jlink \
         --module-path javafx-sdk-21/lib:$JAVA_HOME/jmods \
         --add-modules javafx.controls,javafx.fxml \
         --output target/image
 
       


      # Step 6: Build Linux .deb package
      - name: Build Linux .deb package
        run: |
         jpackage \
         --type deb \
         --input target/ \
         --main-jar ${{ env.JAR_NAME }} \
         --main-class com.example.workertimer2.HelloApplication \
         --name WorkerTimer \
         --app-version 1.0 \
         --dest target/ \
         --runtime-image target/image

      - name: List target after jpackage
        run: ls -lh target/






      # Step 7: Upload artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: WorkerTimer.deb
          path: target/*.deb
          if-no-files-found: error
